package Interfaz;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.plaf.basic.BasicComboBoxUI.ComboBoxLayoutManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.ComboBoxEditor;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;

import DataConnection.dataConnection;
import ObjetoUsuario.objetousuario;

import java.awt.GridLayout;

import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.SwingConstants;

import java.awt.SystemColor;

import javax.swing.JButton;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import javax.swing.DefaultComboBoxModel;

import com.mysql.jdbc.Messages;

public class Usuario extends JFrame {

	private JPanel contentPane_usuario;
	private JTable table_usuario;
	private ArrayList<objetousuario> objetoUsuarioLis;
	private static dataConnection conexion = new dataConnection();
	private JTextField txt_identificacion;
	private JTextField txt_pri_nombre;
	private JTextField txt_seg_nombre;
	private JTextField txt_pri_apelli;
	private JTextField txt_seg_apell;
	private JTextField txt_user;
	private JTextField txt_passw;
	private JTextField txt_edad;
	private JTextField txt_direccion;
	private JTextField txt_telefono;
	boolean crear;
	Usuario a;
	private JTextField txt_idusuario;
	

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Usuario frame = new Usuario();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Usuario() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 775, 461);
		contentPane_usuario = new JPanel();
		contentPane_usuario.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane_usuario);
		contentPane_usuario.setLayout(null);
		
		JScrollPane scrollPane_usuario = new JScrollPane();
		scrollPane_usuario.setBounds(10, 224, 739, 153);
		contentPane_usuario.add(scrollPane_usuario);
		//se mostraran los datos de la DB en la tabla de usuarios 
		table_usuario = new JTable();
		table_usuario.setModel(new DefaultTableModel(new Object[][]{},new String[]{"idusuario","usre","passw","identificacion","idTipodocumento","primerNombre","segundoNombre","primerApellido","segundoApellido","edad","direccion","telefono","rol","Objecte"}));
		scrollPane_usuario.setViewportView(table_usuario);
		
		JPanel panel_usuario = new JPanel();
		panel_usuario.setBackground(SystemColor.activeCaption);
		panel_usuario.setBounds(10, 11, 739, 168);
		contentPane_usuario.add(panel_usuario);
		panel_usuario.setLayout(null);
		
		JLabel lblTipoDeDocumento = new JLabel("Tipo Documento");
		lblTipoDeDocumento.setHorizontalAlignment(SwingConstants.RIGHT);
		lblTipoDeDocumento.setBounds(10, 11, 102, 29);
		panel_usuario.add(lblTipoDeDocumento);
		
		JComboBox comboBox_tipodocumento = new JComboBox();
		comboBox_tipodocumento.setModel(new DefaultComboBoxModel(new String[] {"Cedula", "Tarjeta de Identidad", "Cedula de Extranjeria"}));
		comboBox_tipodocumento.setBounds(122, 15, 95, 20);
		panel_usuario.add(comboBox_tipodocumento);
		
		
		JLabel lblIdentificacin = new JLabel("Identificaci\u00F3n");
		lblIdentificacin.setHorizontalAlignment(SwingConstants.RIGHT);
		lblIdentificacin.setBounds(227, 11, 85, 29);
		panel_usuario.add(lblIdentificacin);
		
		txt_identificacion = new JTextField();
		txt_identificacion.setBounds(322, 15, 95, 20);
		panel_usuario.add(txt_identificacion);
		txt_identificacion.setColumns(10);
		
		JLabel lblPrimerNombre = new JLabel("Primer nombre");
		lblPrimerNombre.setHorizontalAlignment(SwingConstants.RIGHT);
		lblPrimerNombre.setBounds(427, 11, 102, 29);
		panel_usuario.add(lblPrimerNombre);
		
		txt_pri_nombre = new JTextField();
		txt_pri_nombre.setColumns(10);
		txt_pri_nombre.setBounds(539, 15, 95, 20);
		panel_usuario.add(txt_pri_nombre);
		
		JLabel lblSegundoNombre = new JLabel("Segundo nombre");
		lblSegundoNombre.setHorizontalAlignment(SwingConstants.RIGHT);
		lblSegundoNombre.setBounds(10, 51, 102, 29);
		panel_usuario.add(lblSegundoNombre);
		
		txt_seg_nombre = new JTextField();
		txt_seg_nombre.setColumns(10);
		txt_seg_nombre.setBounds(122, 55, 95, 20);
		panel_usuario.add(txt_seg_nombre);
		
		JLabel lblPrimerApellido = new JLabel("Primer apellido");
		lblPrimerApellido.setHorizontalAlignment(SwingConstants.RIGHT);
		lblPrimerApellido.setBounds(220, 51, 92, 29);
		panel_usuario.add(lblPrimerApellido);
		
		txt_pri_apelli = new JTextField();
		txt_pri_apelli.setColumns(10);
		txt_pri_apelli.setBounds(322, 55, 95, 20);
		panel_usuario.add(txt_pri_apelli);
		
		JLabel lblSegundoApellido = new JLabel("Segundo apellido");
		lblSegundoApellido.setHorizontalAlignment(SwingConstants.RIGHT);
		lblSegundoApellido.setBounds(427, 51, 102, 29);
		panel_usuario.add(lblSegundoApellido);
		
		txt_seg_apell = new JTextField();
		txt_seg_apell.setColumns(10);
		txt_seg_apell.setBounds(539, 55, 95, 20);
		panel_usuario.add(txt_seg_apell);
		
		JLabel lblUsuario = new JLabel("Usuario");
		lblUsuario.setHorizontalAlignment(SwingConstants.RIGHT);
		lblUsuario.setBounds(20, 86, 92, 29);
		panel_usuario.add(lblUsuario);
		
		txt_user = new JTextField();
		txt_user.setColumns(10);
		txt_user.setBounds(122, 90, 95, 20);
		panel_usuario.add(txt_user);
		
		JLabel lblPassware = new JLabel("Passware");
		lblPassware.setHorizontalAlignment(SwingConstants.RIGHT);
		lblPassware.setBounds(220, 86, 92, 29);
		panel_usuario.add(lblPassware);
		
		txt_passw = new JTextField();
		txt_passw.setColumns(10);
		txt_passw.setBounds(322, 90, 95, 20);
		panel_usuario.add(txt_passw);
		
		JLabel lblEdad = new JLabel("Edad");
		lblEdad.setHorizontalAlignment(SwingConstants.RIGHT);
		lblEdad.setBounds(437, 86, 92, 29);
		panel_usuario.add(lblEdad);
		
		txt_edad = new JTextField();
		txt_edad.setColumns(10);
		txt_edad.setBounds(539, 90, 95, 20);
		panel_usuario.add(txt_edad);
		
		JLabel lblDireccin = new JLabel("Direcci\u00F3n");
		lblDireccin.setHorizontalAlignment(SwingConstants.RIGHT);
		lblDireccin.setBounds(20, 121, 92, 29);
		panel_usuario.add(lblDireccin);
		
		txt_direccion = new JTextField();
		txt_direccion.setColumns(10);
		txt_direccion.setBounds(122, 125, 95, 20);
		panel_usuario.add(txt_direccion);
		
		JLabel lblTelfono = new JLabel("Tel\u00E9fono");
		lblTelfono.setHorizontalAlignment(SwingConstants.RIGHT);
		lblTelfono.setBounds(220, 121, 92, 29);
		panel_usuario.add(lblTelfono);
		
		txt_telefono = new JTextField();
		txt_telefono.setColumns(10);
		txt_telefono.setBounds(322, 125, 95, 20);
		panel_usuario.add(txt_telefono);
		
		JLabel lblRol = new JLabel("Rol");
		lblRol.setHorizontalAlignment(SwingConstants.RIGHT);
		lblRol.setBounds(427, 121, 102, 29);
		panel_usuario.add(lblRol);
		
		JComboBox comboBox_rol = new JComboBox();
		comboBox_rol.setModel(new DefaultComboBoxModel(new String[] {"Administrador", "Trabajador"}));
		comboBox_rol.setBounds(539, 125, 95, 20);
		panel_usuario.add(comboBox_rol);
		
		txt_idusuario = new JTextField();
		txt_idusuario.setEnabled(false);
		txt_idusuario.setBounds(653, 15, 43, 20);
		panel_usuario.add(txt_idusuario);
		txt_idusuario.setColumns(10);
		
		JButton btnGuardar = new JButton("Guardar");
		btnGuardar.addActionListener(new ActionListener() {
			
			
			public void actionPerformed(ActionEvent e) {
				String idusuario = String.valueOf(0);
				String Item_docu;
				Item_docu = comboBox_tipodocumento.getSelectedItem().toString();
				String usre = String.valueOf(txt_user.getText());
				String passw = String.valueOf(txt_passw.getText());
				String identificacion = String.valueOf(txt_identificacion.getText());
				String primerNombre = String.valueOf(txt_pri_nombre.getText());
				String segundoNombre = String.valueOf(txt_seg_nombre.getText());
				String primerApellido = String.valueOf(txt_pri_apelli.getText());
				String segundoApellido = String.valueOf(txt_seg_apell.getText());
				String edad = String.valueOf(txt_edad.getText());
				String direccion = String.valueOf(txt_direccion.getText());
				String telefono = String.valueOf(txt_telefono.getText());
				String Item_rol;
				Item_rol = comboBox_rol.getSelectedItem().toString();
				
				
				try {
					conexion = new dataConnection();
					
					conexion.insertarUsuario(Integer.parseInt(idusuario) ,usre,passw,Integer.parseInt(identificacion),Item_docu,primerNombre,segundoNombre,primerApellido,segundoApellido,Integer.parseInt(edad),direccion,Integer.parseInt(telefono),Item_rol);
					JOptionPane.showMessageDialog(null,"El usuario fue ingresado con exito");
					
				
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					JOptionPane.showMessageDialog(null,"El usuario no fue ingresado");
					e1.printStackTrace();
				}
			}
		});
		//btnGuardar.setActionCommand("OK");
		//getRootPane().setDefaultButton(btnGuardar);
		
		
		btnGuardar.setBounds(550, 190, 89, 23);
		contentPane_usuario.add(btnGuardar);
		
		JButton btnCancelar = new JButton("Cancelar");
		btnCancelar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnCancelar.setBounds(649, 190, 89, 23);
		contentPane_usuario.add(btnCancelar);
		
		JButton btnCrear = new JButton("Crear");
		btnCrear.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnCrear.setBounds(465, 388, 89, 23);
		contentPane_usuario.add(btnCrear);
		
		JButton btnModificar = new JButton("Modificar");
		btnModificar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnModificar.setBounds(561, 388, 89, 23);
		contentPane_usuario.add(btnModificar);
		
		JButton btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		btnEliminar.setBounds(660, 388, 89, 23);
		contentPane_usuario.add(btnEliminar);
		
		table_usuario.removeColumn(table_usuario.getColumn("Objecte"));
		try {
			
			actualizalista();
		} catch (Exception e) {
			// TODO: handle exception
		}
	}
	//Metodo para visualizar por medio de filas los valores que hay como resultado de la consulta a la DB
		void actualizalista()throws SQLException{
			//Con el objeto Arraylis creado de la clase dataconeccion le envia los valores optenidos el la consulta a usuarios 
			objetoUsuarioLis = conexion.retornaUsuario();
			
			DefaultTableModel modelo = (DefaultTableModel)table_usuario.getModel();
			//Recorre cada uno de los registros obtenidos en la consulta retornausuario
			while (modelo.getRowCount()>0)modelo.removeRow(0); 
			int numcols = modelo.getColumnCount();
			for(objetousuario usr:objetoUsuarioLis){
				Object[]fila = new Object[numcols];
				fila[0]=usr.getIdusuario();
				fila[1]=usr.getUsre();
				fila[2]=usr.getPassw();
				fila[3]=usr.getIdentificacion();
				fila[4]=usr.getIdTipodocumento();
				fila[5]=usr.getPrimerNombre();
				fila[6]=usr.getSegundoNombre();
				fila[7]=usr.getPrimerApellido();
				fila[8]=usr.getSegundoApellido();
				fila[9]=usr.getEdad();
				fila[10]=usr.getDireccion();
				fila[11]=usr.getTelefono();
				fila[12]=usr.getRol();
				fila[13]=usr;
				modelo.addRow(fila);
				
				
			}
		
		}
		
}
